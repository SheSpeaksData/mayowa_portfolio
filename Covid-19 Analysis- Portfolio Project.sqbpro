<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/oadebamb/AppData/Roaming/Microsoft/Windows/Network Shortcuts/Portfolio Projects.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="4581"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/><expanded_item id="4" parent="1"/></tab_structure><tab_browse><current_table name="4,27:mainPercentPopulationVaccinated"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Covid_Deaths" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="9" mode="0"/></sort><column_widths><column index="1" value="92"/><column index="2" value="92"/><column index="3" value="95"/><column index="4" value="93"/><column index="5" value="103"/><column index="6" value="108"/><column index="7" value="104"/><column index="8" value="201"/><column index="9" value="119"/><column index="10" value="115"/><column index="11" value="212"/><column index="12" value="216"/><column index="13" value="212"/><column index="14" value="300"/><column index="15" value="227"/><column index="16" value="223"/><column index="17" value="300"/><column index="18" value="166"/><column index="19" value="116"/><column index="20" value="224"/><column index="21" value="133"/><column index="22" value="241"/><column index="23" value="213"/><column index="24" value="300"/><column index="25" value="230"/><column index="26" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats><column index="9" value=""/></display_formats><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PercentPopulationVaccinated" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths/><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="temp" name="PercentPopulationVaccinated" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="74"/><column index="3" value="73"/><column index="4" value="78"/><column index="5" value="126"/><column index="6" value="167"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">/*
Covid 19 Data Exploration 

Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

*/


SELECT * 
FROM Covid_Deaths
WHERE continent is not NULL
order by 3,4 

 

SELECT location,date, total_cases, new_cases, total_deaths, population
FROM Covid_Deaths 
WHERE continent is not NULL
order by 1,2

--Total cases vs Total Deaths
--Shows likelihood of dying from Covid in specified country
SELECT location, date, total_cases,total_deaths,(total_deaths/total_cases) *100 AS DeathPercentage
FROM Covid_Deaths
WHERE location like '%Ireland%'
and continent is not NULL
order by 1,2

-- -Looking at Total cases vs population--
--Shows what percentange of population got Covid
SELECT location, date, population, total_cases,(total_cases/population) *100 AS PercentagePopulationInfected
FROM Covid_Deaths
WHERE location like '%Ireland%'
and continent is not NULL
order by 1,2

--Countries with highest infection rate compared to population

SELECT location,population, max(total_cases)AS HighestInfectionCount, max((total_cases/population)) *100 AS PercentagePopulationInfected
FROM Covid_Deaths
WHERE continent is not NULL
--WHERE location like '%Ireland%'
Group by location, population
order by PercentagePopulationInfected DESC

--Countries with the Highest Death Count per population

SELECT location, max(cast(total_deaths as INT))as TotalDeathCount
FROM Covid_Deaths
WHERE continent is not NULL
--WHERE location like '%Ireland%'
Group by location
order by TotalDeathCount DESC

-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

Select continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
FROM Covid_Deaths
--Where location like '%Ireland%'
Where continent is not null 
Group by continent
order by TotalDeathCount desc

-- GLOBAL NUMBERS

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
FROM Covid_Deaths
--Where location like '%states%'
where continent is not null 
--Group By date
order by 1,2



SELECT *
FROM Covid_Vaccinations


-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT dea.continent,dea.location, dea.date, dea.population, vac.new_vaccinations
FROM Covid_Deaths dea
JOIN Covid_Vaccinations vac
     ON dea.location = vac.location
	 and dea.date = vac.date
where dea.continent is not null 
	 order by 2,3
---
SELECT dea.continent,dea.location, dea.date, dea.population, vac.new_vaccinations
, sum(Cast(vac.new_vaccinations as bigint))OVER(PARTITION by dea.location ORDER BY dea.location,
dea.date) as RollingPeopleVaccindated
, (
FROM Covid_Deaths dea
JOIN Covid_Vaccinations vac
     ON dea.location = vac.location
	 and dea.date = vac.date
where dea.continent is not null 
	 order by 2,3	 
	 

	 --- Creating a CTE---
	 
WITH PopvsVac(continent, location, date, population, new_vaccinations, RollingPeopleVaccinated) AS
(	
    SELECT 
        dea.continent,
        dea.location, 
        dea.date, 
        dea.population, 
        vac.new_vaccinations,
        SUM(CAST(vac.new_vaccinations AS BIGINT)) OVER (
            PARTITION BY dea.location 
            ORDER BY dea.location, dea.date
        ) AS RollingPeopleVaccinated
    FROM 
        Covid_Deaths dea
    JOIN 
        Covid_Vaccinations vac
    ON 
        dea.location = vac.location AND dea.date = vac.date
    WHERE 
        dea.continent IS NOT NULL 
)
--  query that calls the CTE
SELECT * , (RollingPeopleVaccinated/Population) * 100
FROM PopvsVac



-- Using Temp Table to perform Calculation on Partition By in previous query
-- SQLite does not support the DROP TABLE IF EXISTS syntax with temporary tables.
-- Temporary tables in SQLite are denoted by TEMP or TEMPORARY keyword, not by a # prefix.

-- Drop the temporary table if it exists (SQLite syntax)
DROP TABLE IF EXISTS PercentPopulationVaccinated;

-- Create the temporary table
CREATE TEMP TABLE PercentPopulationVaccinated
(
    Continent NVARCHAR(255),
    Location NVARCHAR(255),
    Date DATETIME,
    Population NUMERIC,
    New_vaccinations NUMERIC,
    RollingPeopleVaccinated NUMERIC
);

-- Insert data into the temporary table
INSERT INTO PercentPopulationVaccinated
SELECT 
    dea.Continent, 
    dea.Location, 
    dea.Date, 
    dea.Population, 
    vac.New_vaccinations,
    SUM(CAST(vac.New_vaccinations AS INT)) OVER (
        PARTITION BY dea.Location 
        ORDER BY dea.Location, dea.Date
    ) AS RollingPeopleVaccinated
FROM 
    Covid_Deaths dea
JOIN 
    Covid_Vaccinations vac
    ON dea.Location = vac.Location AND dea.Date = vac.Date;

-- Select data and calculate the percentage of the population vaccinated
SELECT 
    *,
    (RollingPeopleVaccinated / Population) * 100 AS PercentPopulationVaccinated
FROM 
    PercentPopulationVaccinated;

	-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From Covid_Deaths dea
Join Covid_Vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 


SELECT *
FROM PercentPopulationVaccinated</sql><current_tab id="0"/></tab_sql></sqlb_project>
